{"version":3,"sources":["app-context/AppContext.js","app-context/actions/loadData.js","components/filters/Filters.js","components/items/Items.js","components/loader/Loader.js","components/roll/Roll.js","App.js","index.js"],"names":["AppStateContext","createContext","AppDispatchContext","appReducer","state","action","type","appTypes","loadData","data","climatesTmp","All","localesTmp","forEach","item","key","split","climate","locale","isLoading","filteredData","climates","Object","keys","locales","filterData","Error","initialState","AppProvider","children","useReducer","dispatch","useEffect","Tabletop","init","simpleSheet","then","catch","console","warn","Provider","value","useAppState","context","useContext","undefined","seasons","Filters","useAppDispatch","didMount","useRef","useState","season","setSeason","setClimate","setLocale","current","filter","includes","onSubmit","e","preventDefault","onChange","target","map","s","idx","Items","items","renderItem","className","rarity","name","join","description","i","Loader","width","height","viewBox","cx","cy","r","Roll","setItems","myDialog","onClick","loot","reduce","acc","Math","floor","random","push","showModal","handleClick","ref","close","length","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7b1b1b91.chunk.js","sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from \"react\";\nimport Tabletop from \"tabletop\";\n\nimport { loadData } from \"./actions\";\n\nconst AppStateContext = createContext();\nconst AppDispatchContext = createContext();\n\nfunction appReducer(state, action) {\n  switch (action.type) {\n    case appTypes.loadData:\n      return loadData(state, action.data);\n    case appTypes.filterData:\n      const { filteredData } = action;\n\n      return {\n        ...state,\n        filteredData,\n      };\n    default: {\n      throw new Error(`Unhandled action type: ${action.type}`);\n    }\n  }\n}\nconst appTypes = {\n  loadData: \"loadData\",\n  filterData: \"filterData\",\n};\n\nconst initialState = {\n  isLoading: true,\n  data: [],\n  filteredData: [],\n  climates: [\"All\"],\n  locales: [\"All\"],\n};\n\nfunction AppProvider({ children }) {\n  const [state, dispatch] = useReducer(appReducer, initialState);\n\n  useEffect(() => {\n    Tabletop.init({\n      key: \"1joq6oGR_nb_mHa4-w2r-EC50qWim7mWvqiN_K1WxGRE\",\n      simpleSheet: true,\n    })\n      .then((data) => {\n        dispatch({ type: appTypes.loadData, data });\n      })\n      .catch(console.warn);\n  }, []);\n\n  return (\n    <AppStateContext.Provider value={state}>\n      <AppDispatchContext.Provider value={dispatch}>\n        {children}\n      </AppDispatchContext.Provider>\n    </AppStateContext.Provider>\n  );\n}\n\nfunction useAppState() {\n  const context = useContext(AppStateContext);\n\n  if (context === undefined) {\n    throw new Error(\"useAppState must be used within a AppProvider\");\n  }\n  return context;\n}\n\nfunction useAppDispatch() {\n  const context = useContext(AppDispatchContext);\n\n  if (context === undefined) {\n    throw new Error(\"useAppDispatch must be used within a AppProvider\");\n  }\n  return context;\n}\n\nexport { AppProvider, useAppState, useAppDispatch, appTypes };\n","const strToArr = (str) => str.split(\", \");\n\nexport function loadData(state, data) {\n  const climatesTmp = { All: true };\n  const localesTmp = { All: true };\n\n  data.forEach((item) => {\n    [\"season\", \"climate\", \"locale\"].forEach((key) => {\n      item[key] = strToArr(item[key]);\n    });\n\n    item.climate.forEach((climate) => {\n      climatesTmp[climate] = true;\n    });\n    item.locale.forEach((climate) => {\n      localesTmp[climate] = true;\n    });\n  });\n\n  return {\n    ...state,\n    isLoading: false,\n    data: data,\n    filteredData: data,\n    climates: Object.keys(climatesTmp),\n    locales: Object.keys(localesTmp),\n  };\n}\n","import React, { useRef, useEffect, useState } from \"react\";\n\nimport { Roll } from \"components\";\nimport { useAppState, appTypes, useAppDispatch } from \"app-context\";\nimport \"./Filters.css\";\n\nconst seasons = [\"Always\", \"Spring\", \"Summer\", \"Autumn\", \"Winter\"];\n\nexport function Filters() {\n  const dispatch = useAppDispatch();\n  const didMount = useRef(false);\n\n  const { data, climates, locales } = useAppState();\n  const [season, setSeason] = useState(seasons[0]);\n  const [climate, setClimate] = useState(climates[0]);\n  const [locale, setLocale] = useState(locales[0]);\n\n  useEffect(() => {\n    if (didMount.current) {\n       let filteredData = [...data];\n\n       if (season !== seasons[0]) {\n         filteredData = filteredData.filter((item) =>\n           item.season.includes(season)\n         );\n       }\n\n       if (climate !== climates[0]) {\n         filteredData = filteredData.filter((item) =>\n           item.climate.includes(climate)\n         );\n       }\n\n       if (locale !== locales[0]) {\n         filteredData = filteredData.filter((item) =>\n           item.locale.includes(locale)\n         );\n       }\n\n      dispatch({ type: appTypes.filterData, filteredData });\n    } else didMount.current = true;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [season, climate, locale]);\n\n  return (\n    <form onSubmit={(e) => e.preventDefault()}>\n      <label>\n        Season\n        <select\n          value={season}\n          onChange={({ target: { value } }) => setSeason(value)}\n        >\n          {seasons.map((s, idx) => (\n            <option key={idx} value={s}>\n              {s}\n            </option>\n          ))}\n        </select>\n      </label>\n\n      <label>\n        Climate\n        <select\n          value={climate}\n          onChange={({ target: { value } }) => setClimate(value)}\n        >\n          {climates.map((s, idx) => (\n            <option key={idx} value={s}>\n              {s}\n            </option>\n          ))}\n        </select>\n      </label>\n\n      <label>\n        Locale\n        <select\n          value={locale}\n          onChange={({ target: { value } }) => setLocale(value)}\n        >\n          {locales.map((s, idx) => (\n            <option key={idx} value={s}>\n              {s}\n            </option>\n          ))}\n        </select>\n      </label>\n      <Roll />\n    </form>\n  );\n}\n","import React, { Fragment } from \"react\";\n\nimport \"./Items.css\";\n\nexport function Items({ items }) {\n\n  const getRarity = (rarity) => {\n    if (rarity <= 5) return \"legendary\";\n    if (rarity <= 50) return \"rare\";\n    if (rarity <= 80) return \"uncommon\";\n    return \"common\";\n  };\n\n  const renderItem = (item) => (\n    <li className={`item item-${getRarity(item.rarity)}`}>\n      <h3>{item.name}</h3>\n      <p>Rarity: {item.rarity}%</p>\n      <p className=\"detail-container\">Season: {item.season.join(\", \")}</p>\n      <p className=\"detail-container\">Climate: {item.climate.join(\", \")}</p>\n      <p className=\"detail-container\">Locale: {item.locale.join(\", \")}</p>\n      <p className=\"detail-description\">{item.description}</p>\n    </li>\n  );\n\n  return (\n    <ul className=\"items-container\">\n      {items.map((item, i) => (\n        <Fragment key={i}>{renderItem(item)}</Fragment>\n      ))}\n    </ul>\n  );\n}\n","import React from \"react\";\n\nimport \"./Loader.css\";\n\nexport function Loader() {\n  return (\n    <svg className=\"loader\" width=\"64\" height=\"64\" viewBox=\"0 0 66 66\">\n      <circle cx=\"33\" cy=\"33\" r=\"30\" />\n    </svg>\n  );\n}\n","import React, { useRef, useState } from \"react\";\n\nimport { useAppState } from \"app-context\";\nimport { Items } from \"components\";\nimport \"./Roll.css\";\n\nexport function Roll() {\n  const [items, setItems] = useState([]);\n  const { filteredData } = useAppState();\n  const myDialog = useRef(null);\n\n  const handleClick = () => {\n    const loot = [...filteredData].reduce((acc, item) => {\n      const rand = Math.floor(Math.random() * 100 + 1);\n\n      if (rand <= +item.rarity) acc.push(item);\n\n      return acc;\n    }, []);\n\n    setItems(loot);\n    myDialog.current.showModal();\n  };\n\n  return (\n    <>\n      <button className=\"roll-button\" onClick={() => handleClick()}>\n        🎲 Roll\n      </button>\n      <dialog className=\"roll-dialog\" ref={myDialog}>\n        <header className=\"dialog-header\">\n          <h2>Rolled plants</h2>\n          <button\n            className=\"btn-close\"\n            onClick={() => myDialog.current.close()}\n          >\n            &times;\n          </button>\n        </header>\n        <main className=\"dialog-content\">\n          {items.length ? <Items items={items} /> : \"Empty Loot... 🤕\"}\n        </main>\n      </dialog>\n    </>\n  );\n}\n","import React from \"react\";\n\nimport { Filters, Items, Loader } from \"components\";\nimport { useAppState } from \"app-context\";\nimport \"./App.css\";\n\nfunction App() {\n  const { isLoading, filteredData } = useAppState();\n\n  if (isLoading) {\n    return (\n      <div className=\"loading-container\">\n        <h1>Loading Plants...</h1>\n        <Loader />\n      </div>\n    );\n  }\n  return (\n    <>\n      <Filters />\n      <Items items={filteredData} />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { AppProvider } from \"./app-context\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider>\n      <App />\n    </AppProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}